Description: >
  This stack creates ECS Cluster.

Parameters:
  AppName:
    Type: String
    Description: Name of app requiring ELB exposure

  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnet1:
    Type: AWS::EC2::Subnet::Id

  Subnet2:
    Type: AWS::EC2::Subnet::Id

  DesiredCount:
    Type: Number

  TemplateBucket:
    Type: String
    Description: S3 Bucket used for nested templates

  ImageName:
    Type: String

  ImageTag:
    Type: String

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AWS::StackName

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/templates/load-balancer.yaml
      Parameters:
        Subnet1: !Ref Subnet1
        Subnet2: !Ref Subnet2
        VpcId: !Ref VpcId
        Name: !Ref AppName

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !GetAtt LoadBalancer.Outputs.LoadBalancerArn
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      TargetType: ip
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        -
          Key: deregistration_delay.timeout_seconds
          Value: "30"
      Tags:
        -
          Key: Image
          Value: !Ref ImageTag

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          Values:
          - "*"
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1

  TaskIamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}
      SecurityGroupIngress:
        - SourceSecurityGroupId: !GetAtt LoadBalancer.Outputs.SecurityGroup
          IpProtocol: "-1"
      VpcId: !Ref VpcId

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        -
          ContainerName: simple-app
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED #MENTION DISABLED if in private subnet with NAT gateway
          SecurityGroups:
             - !GetAtt SecurityGroup.GroupId
          Subnets:
          - !Ref Subnet1
          - !Ref Subnet2

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskIamRole.Arn
      ContainerDefinitions:
        -
          Name: !Ref AppName
          Image: !Sub ${ImageName}:${ImageTag}
          Essential: true
          Memory: 512
          PortMappings:
            -
              ContainerPort: 80
              HostPort: 80
          Environment:
            -
              Name: Tag
              Value: !Ref ImageTag

Outputs:
  ClusterName:
    Value: !Ref Cluster

  ServiceName:
    Value: !GetAtt Service.Name

  ServiceUrl:
    Description: URL of the load balancer
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl
